[{"id":"get_recommend_products","user_id":"da034d30-c275-45c5-8070-f27b07d3e671","name":"get_recommend_products","content":"import os\nimport requests\nfrom datetime import datetime\nimport pytz\n\n\nclass Tools:\n    def __init__(self):\n        self.citation = True\n\n    def get_recommend_products(\n        self, filter_price: float, operator: str, intention: str\n    ) -> str:\n        \"\"\"\n        Recommend the products with 3 fields: filter_price: float, operator: str (support: >, <, =), intention: str\n        \"\"\"\n        return requests.get(\n            f\"http://fastapi:8000/recommend/?filter_price={filter_price}&operator={operator}&intention={intention}\"\n        ).text\n        # return requests.get(\n        #     f\"http://fastapi:8000/recommend/?filter_price=1000&operator=>&intention={intention}\"\n        # ).text\n","specs":[{"name":"get_recommend_products","description":"Recommend the products with 3 fields: filter_price: float, operator: str (support: >, <, =), intention: str","parameters":{"type":"object","properties":{"filter_price":{"type":"float","description":"filter_price"},"operator":{"type":"str","description":"operator"},"intention":{"type":"str","description":"intention"}},"required":["filter_price","operator","intention"]}}],"meta":{"description":"Recommend the products with 3 fields: filter_price: float, operator: str (support: >, <, =), intention: str","manifest":{}},"updated_at":1731167645,"created_at":1731166874}]